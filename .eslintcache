[{"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\reportWebVitals.js":"1","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\navbar.js":"2","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Homepage.js":"3","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\BlogCard.js":"4","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\HomePage.js":"5","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\DetailPage.js":"6","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\CardList.js":"7","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\Navbar.js":"8","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\CardDetail.js":"9","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\router\\Router.js":"10","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\index.js":"11","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\ProfilePage.js":"12","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\PostPage.js":"13","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\UpdatePage.js":"14","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\App.js":"15","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\context\\AuthContext.js":"16","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\helper\\FetchData.js":"17","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Register.js":"18","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Login.js":"19","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\MenuComponent.js":"20"},{"size":362,"mtime":1611502682000,"results":"21","hashOfConfig":"22"},{"size":4546,"mtime":1611581340254,"results":"23","hashOfConfig":"22"},{"size":966,"mtime":1611576004862,"results":"24","hashOfConfig":"22"},{"size":4078,"mtime":1611995383000,"results":"25","hashOfConfig":"22"},{"size":648,"mtime":1611928213000,"results":"26","hashOfConfig":"22"},{"size":1343,"mtime":1611958607740,"results":"27","hashOfConfig":"22"},{"size":829,"mtime":1612005388000,"results":"28","hashOfConfig":"22"},{"size":5772,"mtime":1611869649000,"results":"29","hashOfConfig":"22"},{"size":6794,"mtime":1612014156000,"results":"30","hashOfConfig":"22"},{"size":1969,"mtime":1611953008812,"results":"31","hashOfConfig":"22"},{"size":500,"mtime":1611841022000,"results":"32","hashOfConfig":"22"},{"size":8596,"mtime":1611998308000,"results":"33","hashOfConfig":"22"},{"size":8677,"mtime":1611942543000,"results":"34","hashOfConfig":"22"},{"size":9715,"mtime":1611941862000,"results":"35","hashOfConfig":"22"},{"size":255,"mtime":1611841679592,"results":"36","hashOfConfig":"22"},{"size":452,"mtime":1611865330000,"results":"37","hashOfConfig":"22"},{"size":170,"mtime":1611841953568,"results":"38","hashOfConfig":"22"},{"size":6844,"mtime":1611867879000,"results":"39","hashOfConfig":"22"},{"size":5490,"mtime":1611865362000,"results":"40","hashOfConfig":"22"},{"size":5642,"mtime":1611949531550,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16j22uh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\navbar.js",["89","90"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Homepage.js",["91","92"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\BlogCard.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\HomePage.js",[],["93","94"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\DetailPage.js",["95"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\CardList.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\Navbar.js",["96","97","98","99","100","101","102"],"import React,{useContext,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Avatar from '@material-ui/core/Avatar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport logo from '../assets/dj.png'\nimport Link from '@material-ui/core/Link';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport axios from 'axios'\nimport { Paper } from '@material-ui/core';\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  font:{\n   fontSize:10,\n   marginLeft:2,\n   marginLeft: theme.spacing(-1),\n  },\n  small: {\n   width: theme.spacing(5),\n   height: theme.spacing(5),\n },\n root: {\n   flexGrow: 1,\n   overflow:'hidden'\n },\n menuButton: {\n   marginRight: theme.spacing(),\n },\n title: {\n   flexGrow: 1,\n },\n \n search: {\n   position: 'relative',\n   borderRadius: theme.shape.borderRadius,\n  \n   marginLeft: 0,\n   width: '100%',\n   [theme.breakpoints.up('sm')]: {\n     marginLeft: theme.spacing(1),\n     width: 'auto',\n   },\n },\n searchIcon: {\n   padding: theme.spacing(0, 2),\n   height: '100%',\n   position: 'absolute',\n   pointerEvents: 'none',\n   display: 'flex',\n   alignItems: 'center',\n   justifyContent: 'center',\n },\n inputRoot: {\n   color: 'inherit',\n },\n inputInput: {\n   padding: theme.spacing(1, 1, 1, 0),\n   // vertical padding + font size from searchIcon\n   paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n   transition: theme.transitions.create('width'),\n   width: '100%',\n   [theme.breakpoints.up('sm')]: {\n     width: '12ch',\n     '&:focus': {\n       width: '20ch',\n     },\n   }\n}\n\n \n}));\n\n\nexport default function NavBar() {\n const { setLoggedIn, currentUser, setCurrentUser } = useContext(AuthContext);\n let history = useHistory();\n const classes = useStyles();\n const [anchorEl, setAnchorEl] = React.useState(null);\n const handleMenu = (event) => {\n     setAnchorEl(event.currentTarget);\n   };\n const handleClose = (path) => {\n     setAnchorEl(null);\n     if (path===''){\n       postLogout()\n     }\n     history.push(path)\n   };\n const open = Boolean(anchorEl);\n\n const matches = useMediaQuery('(min-width:750px)');\n\n const postLogout = async () =>{\n   await axios.post(\"https://rd-restful-blog.herokuapp.com/auth/logout/\")\n  \n   localStorage.setItem(\"Token\", \"\")\n   localStorage.setItem(\"currentUser\", \"\")\n   localStorage.setItem(\"isLoggedIn\", false)\n   history.push('/')\n   \n   \n   };\n // useEffect(() =>{\n\n // }, [localStorage.getItem('Token')])\n \n\n return (\n   <div className={classes.root}>\n  \n     <AppBar position=\"static\">\n       <Toolbar>\n         <Link href=\"/\" >\n         <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n         <Avatar alt=\"Remy Sharp\" src={logo} className={classes.small} />\n         </IconButton>\n         </Link>\n         <Typography variant=\"h6\" className={classes.title}>\n         Blog\n         </Typography>\n\n         <div className={classes.search}>\n           <div className={classes.searchIcon}>\n             <SearchIcon />\n           </div>\n           <InputBase\n             placeholder=\"Search…\"\n             classes={{\n               root: classes.inputRoot,\n               input: classes.inputInput,\n             }}\n             inputProps={{ 'aria-label': 'search' }}\n           />\n         </div>\n             {\n               ! localStorage.getItem(\"Token\") ?\n               <>\n                 <Link href=\"/login\" color=\"inherit\" style={{textDecoration:'none'}}>\n                 <Button color=\"inherit\" className={matches ? null :classes.font}> Login</Button>\n                 </Link>\n                 <Link href=\"/register\" color=\"inherit\" style={{textDecoration:'none'}}>\n                 <Button color=\"inherit\" className={matches ? null :classes.font}>Register</Button>\n                 </Link>\n               </>:\n               null\n             }\n\n         {\n           localStorage.getItem(\"Token\") ?\n             <>\n             <Typography>{localStorage.getItem('currentUser')}</Typography> \n             \n               <IconButton\n                 aria-label=\"account of current user\"\n                 aria-controls=\"menu-appbar\"\n                 aria-haspopup=\"true\"\n                 onClick={handleMenu}\n                 color=\"inherit\"\n               >\n                 <AccountCircle />\n               </IconButton>\n                 <Menu\n                   id=\"menu-appbar\"\n                   anchorEl={anchorEl}\n                   anchorOrigin={{\n                     vertical: 'top',\n                     horizontal: 'right',\n                   }}\n                   keepMounted\n                   transformOrigin={{\n                     vertical: 'top',\n                     horizontal: 'right',\n                   }}\n                   open={open}\n                   onClose={handleClose}\n                 >\n                       <MenuItem onClick={() =>handleClose('/create')}>New Post</MenuItem>\n                       <MenuItem onClick={() =>handleClose('/profile')}>Profile</MenuItem>\n                       <MenuItem onClick={() =>handleClose('')}>Logout</MenuItem>\n                     \n                 </Menu>\n             </>\n                 : null\n               }\n       </Toolbar>\n     </AppBar>\n   </div>\n );\n}","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\CardDetail.js",["103","104","105","106"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\router\\Router.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\index.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\ProfilePage.js",["107","108"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\PostPage.js",["109","110"],"\nimport React from 'react';\nimport {\n    withStyles,\n  } from \"@material-ui/core/styles\";\n  \nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CKEditor from 'ckeditor4-react';\nimport {useFormik} from 'formik'\nimport * as Yup from \"yup\";\nimport {useHistory} from 'react-router-dom';\nimport { fetchData } from '../helper/FetchData'\nimport { postData } from '../helper/PostData'\n  \n  const CssTextField = withStyles({\n    root: {\n      width: \"40%\",\n      \"& label.Mui-focused\": {\n        color: \"green\",\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"green\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#cfccdf\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#e9967a\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"green\",\n        },\n      },\n    },\n  })(TextField);\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \n      width:'100%',\n      overflow: 'hidden'\n    },\n   \n    paper: {\n      margin: theme.spacing(8, 4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '80%',\n      paddingLeft: \"10%\",\n    },\n    form2: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '100%',\n    },\n    // form: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    //   paddingLeft: \"20%\",\n    //   paddingRight: \"5%\",\n    // },\n    // form2: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    // },\n    margin: {\n      margin: 2,\n      marginTop: 13,\n    },\n    address: {\n      marginTop: 13,\n      margin: 2,\n      width: \"80.5%\",\n    },\n    bio: {\n      margin: 2,\n      marginTop: 13,\n    },\n    button: {\n      marginTop: 13,\n      width: \"80.7%\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        display:'block',\n        marginLeft : -0.1,\n        width: \"40%\",\n        \"& label.Mui-focused\": {\n          color: \"green\",\n        },\n        \"& .MuiInput-underline:after\": {\n          borderBottomColor: \"green\",\n        },\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#cfccdf\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#e9967a\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"green\",\n          },\n        },\n        \n      },\n  }));\n  \n  const PostPage = () => {\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:750px)\");\n\n    const history = useHistory();\n  \n\n    const validationSchema = Yup.object().shape({\n      title:Yup.string()\n        .required('you must write a title')\n        .max(100,'Title is too long'),\n      content: Yup.string()\n         .required('You must write something'),\n      image : Yup.string(),\n      status:Yup.string()\n     })\n     \n     const initialValues = {\n       title:'',\n       content:'',\n       image:'',\n       status:''\n     }\n     \n     \n     const onSubmit = async(values) => {\n       postData(\"https://blog-backend-ysf.herokuapp.com/create/\", \n           values\n         )\n         .then((data) => {\n            history.push(\"/\");\n       \n         }).catch((err) => {\n             console.log(err)\n         })\n        }\n     \n     const formik = useFormik({\n       initialValues,\n       validationSchema,\n       onSubmit\n     })\n\n  \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={12} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LocalMallIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Create New Post\n            </Typography>\n            <form className={matches ? classes.form : classes.form2} onSubmit={formik.handleSubmit}>\n              <CssTextField\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                onChange={formik.handleChange}\n                value = {formik.values.title}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('title')}\n                error={formik.touched.title && formik.errors.title}\n                  helperText={formik.touched.title && formik.errors.title}\n              />\n              <CssTextField\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                id=\"image\"\n                name=\"image\"\n                label=\"Image URL\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value = {formik.values.image}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('image')}\n                error={formik.touched.image && formik.errors.image}\n                helperText={formik.touched.image&& formik.errors.image}\n              />\n              {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              \n                className={classes.margin}\n                style={{width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                multiline\n                rows={8}\n                id=\"content\"\n                name=\"content\"\n                label=\"Content\"\n                onChange={formik.handleChange}\n                value = {formik.values.content}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('content')}\n                error={formik.touched.content && formik.errors.content }\n                helperText={formik.touched.content && formik.errors.content }\n                \n              />\n              \n           \n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name='status'\n                inputProps={{\n                    name: 'status',\n                    id: 'outlined-age-native-simple',\n                }}\n                >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={'d'} label = 'draft'/>\n                <option value={'p'} label = 'published'/>\n                \n                </Select>\n              </FormControl>\n              <Button\n                color=\"primary\"\n                style={{\n                  width: matches ? \"80.7%\" : \"100%\",\n                  marginTop: matches ? null : 30,\n                }}\n                variant=\"contained\"\n                fullWidth\n                type=\"submit\"\n                className={classes.button}\n              >\n                Create\n              </Button>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n  export default PostPage;\n\n ","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\UpdatePage.js",["111","112","113"],"import React,{useEffect,useState} from 'react';\nimport {\n    withStyles,\n  } from \"@material-ui/core/styles\";\n  \nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CKEditor from 'ckeditor4-react';\nimport {useFormik} from 'formik'\nimport * as Yup from \"yup\";\nimport {useHistory} from 'react-router-dom';\nimport { fetchData } from '../helper/FetchData'\nimport { putData } from '../helper/PutData'\nimport { toast } from 'react-toastify'\n\n\n\n// import { fetchData } from \"../helper/FetchData\";\n// import { toast, ToastContainer } from \"react-toastify\";\nimport axios from \"axios\"\nimport { useParams } from \"react-router-dom\";\n  \n  const CssTextField = withStyles({\n    root: {\n      width: \"40%\",\n      \"& label.Mui-focused\": {\n        color: \"green\",\n      },\n      \"& .MuiInput-underline:after\": {\n        borderBottomColor: \"green\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#cfccdf\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#e9967a\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"green\",\n        },\n      },\n    },\n  })(TextField);\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      \n      width:'100%',\n      overflow: 'hidden'\n    },\n   \n    paper: {\n      margin: theme.spacing(8, 4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '80%',\n      paddingLeft: \"10%\",\n    },\n    form2: {\n      marginTop: \"3rem\",\n      alignItems: \"center\",\n      width : '100%',\n    },\n    // form: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    //   paddingLeft: \"20%\",\n    //   paddingRight: \"5%\",\n    // },\n    // form2: {\n    //   marginTop: \"3rem\",\n    //   alignItems: \"center\",\n    // },\n    margin: {\n      margin: 2,\n      marginTop: 13,\n    },\n    address: {\n      marginTop: 13,\n      margin: 2,\n      width: \"80.5%\",\n    },\n    bio: {\n      margin: 2,\n      marginTop: 13,\n    },\n    button: {\n      marginTop: 13,\n      width: \"80.7%\",\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n        display:'block',\n        marginLeft : -0.1,\n        width: \"40%\",\n        \"& label.Mui-focused\": {\n          color: \"green\",\n        },\n        \"& .MuiInput-underline:after\": {\n          borderBottomColor: \"green\",\n        },\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#cfccdf\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#e9967a\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"green\",\n          },\n        },\n        \n      },\n  }));\n  \n  const UpdatePage = () => {\n    const [data, setData] = useState()\n    const classes = useStyles();\n    const matches = useMediaQuery(\"(min-width:750px)\");\n\n    const history = useHistory();\n     const { slug } = useParams();\n \n    // const fetchData = async () => {\n    //   const res = await axios.get(`https://blog-backend-ysf.herokuapp.com/${slug}/update`)\n    //   console.log(res)\n    // }\n\n    const fetchData = async () => {\n      const res = await axios.get(`https://blog-backend-ysf.herokuapp.com/${slug}/detail`)\n      formik.values.title= res?.data?.title\n      formik.values.image= res?.data?.image\n      formik.values.content= res?.data?.content\n      formik.values.status= res?.data?.status\n      setData(res?.data)\n    }\n\n\n    \n    useEffect(() => {\n      fetchData()\n    }, [])\n    \n   \n\n    const validationSchema = Yup.object().shape({\n      title:Yup.string()\n        .required('you must write a title')\n        .max(100,'Title is too long'),\n      content: Yup.string()\n         .required('You must write something'),\n      image : Yup.string(),\n      status:Yup.string()\n     })\n     \n     const initialValues = {\n       title:'',\n       content:'',\n       image:'',\n       status:''\n     }\n     \n     \n     const onSubmit = (values) => {\n       \n      const response = putData(`https://blog-backend-ysf.herokuapp.com/${slug}/update/`, values)\n      .then((data) => { \n\n       history.push(`/${slug}/detail/`);\n     })\n     .catch((err) => {\n       toast.error(err.message || \" an error occured\");      \n     });\n      console.log(response)\n      \n      \n   }\n     \n     const formik = useFormik({\n       initialValues,\n       validationSchema,\n       onSubmit\n     })\n\n  \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={12} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LocalMallIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              \n              Update Post\n            </Typography>\n            <form className={matches ? classes.form : classes.form2} onSubmit={formik.handleSubmit}>\n              <CssTextField\n                defaultValue={data?.title}\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                onChange={formik.handleChange}\n                value = {formik.values.title}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('title')}\n                error={formik.touched.title && formik.errors.title}\n                helperText={formik.touched.title && formik.errors.title}\n           />\n              <CssTextField\n                className={classes.margin}\n                style={{ width: matches ? \"80.5%\" : \"100%\" }}\n                id=\"image\"\n                name=\"image\"\n                label=\"Image URL\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                value = {formik.values.image}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('image')}\n                error={formik.touched.image && formik.errors.image}\n                helperText={formik.touched.image&& formik.errors.image}\n                \n              />\n              {/* {\n                matches\n                ?\n                <div className=\"App\" style={{  marginTop:20,width: matches ? \"80.5%\" : \"100%\" }}>\n            \n                <CKEditor\n                    id=\"content\"\n                    name = 'content'\n                    editor={ ClassicEditor }\n                    onChange={(event) => formik.handleChange(event)}\n                    value = {formik.values.content}\n                    onBlur={(event) => formik.handleBlur(event)}\n                    {...formik.getFieldProps('content')}\n                    error={formik.touched.content && formik.errors.content }\n                   type=\"classic\"\n                  //  data =  {formik.values.content}\n                   readOnly={false}\n                />\n            </div>\n                : */}\n            <CssTextField\n              \n                className={classes.margin}\n                style={{width: matches ? \"80.5%\" : \"100%\" }}\n                variant=\"outlined\"\n                multiline\n                rows={8}\n                id=\"content\"\n                name=\"content\"\n                // label=\"Content\"\n                onChange={formik.handleChange}\n                value = {formik.values.content}\n                onBlur={formik.handleBlur}\n                {...formik.getFieldProps('content')}\n                error={formik.touched.content && formik.errors.content }\n                helperText={formik.touched.content && formik.errors.content }\n                \n              />\n              \n           \n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Status</InputLabel>\n                <Select\n                native\n                value={formik.values.status}\n                onChange={formik.handleChange}\n                label=\"Status\"\n                name='status'\n                inputProps={{\n                    name: 'status',\n                    id: 'outlined-age-native-simple',\n                }}\n                >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={'d'} label = 'draft'/>\n                <option value={'p'} label = 'published'/>\n                \n                </Select>\n              </FormControl>\n              <Button\n                color=\"primary\"\n                style={{\n                  width: matches ? \"80.7%\" : \"100%\",\n                  marginTop: matches ? null : 30,\n                }}\n                variant=\"contained\"\n                fullWidth\n                type=\"submit\"\n                className={classes.button}\n              >\n                Update\n              </Button>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  };\n  export default UpdatePage;\n\n ","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\App.js",[],["114","115"],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\context\\AuthContext.js",["116"],"import { createContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext();\n\nfunction AuthContextProvider({ children }) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState();\n\n\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setLoggedIn, setCurrentUser, currentUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContextProvider;\n\n","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\helper\\FetchData.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Register.js",[],"C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\pages\\Login.js",["117","118","119","120"],"import React,{useContext} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { fetchData } from \"../helper/FetchData\";\nimport { useHistory } from \"react-router-dom\";\nimport {toast,ToastContainer} from 'react-toastify'\nimport {useFormik} from 'formik'\nimport * as Yup from \"yup\";\n\nimport { AuthContext } from '../context/AuthContext'\n\n\n\n// FOOTER\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright ©️ '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n// STYLE\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  let history = useHistory();\n  const classes = useStyles();\n\nconst validationSchema = Yup.object().shape({\n username: Yup.string()\n    .required('You must enter an username')\n    .max(100,'not invalid username'),\n password: Yup.string()\n    .required(\"No password provided.\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\n})\n\nconst initialValues = {\n  username:'',\n  password:''\n}\n// const { currentUser, setCurrentUser } = useContext(AuthContext)\n\nconst onSubmit = async(values) => {\n  fetchData(\"https://blog-backend-ysf.herokuapp.com/auth/login/\", \n      values\n    )\n    .then((data) => {\n      if (data.key){\n        localStorage.setItem(\"Token\", data.key);\n        localStorage.setItem('currentUser',values.username)\n        localStorage.setItem('isLoggedIn',true)\n        history.push(\"/\");\n      }\n    }).catch((err) => {\n        console.log(err)\n    })\n  }\n\n\nconst formik = useFormik({\n  initialValues,\n  validationSchema,\n  onSubmit\n  \n})\n\n\n\n  return (\n    \n    <Container component=\"main\" maxWidth=\"xs\">\n   \n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <ToastContainer \n            position=\"top-right\"\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n          \n            pauseOnHover/>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n        // TODO: toast ile hata verdirilecek\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={formik.handeChange}\n            value = {formik.values.username}\n            onBlur={formik.handleBlur}\n            {...formik.getFieldProps('username')}\n            error={formik.touched.username && formik.errors.username}\n            helperText={formik.touched.username && formik.errors.username}\n            \n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={formik.handleChange}\n            value = {formik.values.password}\n            onBlur={formik.handleBlur}\n            {...formik.getFieldProps('password')}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit} \n          >\n            Sign In\n          </Button>\n        </form>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        \n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\n","C:\\Users\\tt\\Desktop\\GitHub\\React_Django_Project_Frontend\\src\\components\\MenuComponent.js",[],{"ruleId":"121","severity":1,"message":"122","line":16,"column":8,"nodeType":"123","messageId":"124","endLine":16,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":24,"column":5,"nodeType":"127","messageId":"128","endLine":24,"endColumn":15},{"ruleId":"121","severity":1,"message":"129","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"130","line":21,"column":7,"nodeType":"123","messageId":"124","endLine":21,"endColumn":14},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":34,"column":6,"nodeType":"137","endLine":34,"endColumn":8,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":1,"column":26,"nodeType":"123","messageId":"124","endLine":1,"endColumn":35},{"ruleId":"121","severity":1,"message":"140","line":17,"column":22,"nodeType":"123","messageId":"124","endLine":17,"endColumn":30},{"ruleId":"121","severity":1,"message":"129","line":20,"column":10,"nodeType":"123","messageId":"124","endLine":20,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":31,"column":4,"nodeType":"127","messageId":"128","endLine":31,"endColumn":14},{"ruleId":"121","severity":1,"message":"141","line":90,"column":10,"nodeType":"123","messageId":"124","endLine":90,"endColumn":21},{"ruleId":"121","severity":1,"message":"142","line":90,"column":23,"nodeType":"123","messageId":"124","endLine":90,"endColumn":34},{"ruleId":"121","severity":1,"message":"143","line":90,"column":36,"nodeType":"123","messageId":"124","endLine":90,"endColumn":50},{"ruleId":"121","severity":1,"message":"139","line":1,"column":26,"nodeType":"123","messageId":"124","endLine":1,"endColumn":35},{"ruleId":"121","severity":1,"message":"144","line":29,"column":8,"nodeType":"123","messageId":"124","endLine":29,"endColumn":12},{"ruleId":"121","severity":1,"message":"145","line":90,"column":10,"nodeType":"123","messageId":"124","endLine":90,"endColumn":17},{"ruleId":"121","severity":1,"message":"146","line":90,"column":19,"nodeType":"123","messageId":"124","endLine":90,"endColumn":29},{"ruleId":"121","severity":1,"message":"147","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":155,"column":6,"nodeType":"137","endLine":155,"endColumn":8,"suggestions":"148"},{"ruleId":"121","severity":1,"message":"147","line":19,"column":8,"nodeType":"123","messageId":"124","endLine":19,"endColumn":16},{"ruleId":"121","severity":1,"message":"149","line":23,"column":10,"nodeType":"123","messageId":"124","endLine":23,"endColumn":19},{"ruleId":"121","severity":1,"message":"147","line":18,"column":8,"nodeType":"123","messageId":"124","endLine":18,"endColumn":16},{"ruleId":"121","severity":1,"message":"149","line":22,"column":10,"nodeType":"123","messageId":"124","endLine":22,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":165,"column":8,"nodeType":"137","endLine":165,"endColumn":10,"suggestions":"150"},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"121","severity":1,"message":"139","line":1,"column":35,"nodeType":"123","messageId":"124","endLine":1,"endColumn":44},{"ruleId":"121","severity":1,"message":"153","line":1,"column":15,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"154","line":17,"column":9,"nodeType":"123","messageId":"124","endLine":17,"endColumn":14},{"ruleId":"121","severity":1,"message":"155","line":21,"column":10,"nodeType":"123","messageId":"124","endLine":21,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":128,"column":82,"nodeType":"158","endLine":130,"endColumn":11},"no-unused-vars","'logo2' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","'Paper' is defined but never used.","'classes' is assigned a value but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'setLoggedIn' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'Link' is defined but never used.","'comment' is assigned a value but never used.","'setComment' is assigned a value but never used.","'CKEditor' is defined but never used.",["162"],"'fetchData' is defined but never used.",["163"],["159"],["160"],"'useContext' is defined but never used.","'toast' is defined but never used.","'AuthContext' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},{"desc":"164","fix":"167"},"Update the dependencies array to be: [fetchData]",{"range":"168","text":"169"},{"range":"170","text":"169"},{"range":"171","text":"169"},[908,910],"[fetchData]",[3893,3895],[4228,4230]]